每条慢查询日志都以一个 slowlog.h/slowlogEntry 结构定义：
typedef struct slowlogEntry {
	// 命令参数
	robj **argv;
	// 命令参数数量
	int argc;
	// 唯一标识符
	long long id; /* Unique entry identifier. */
	// 执行命令消耗的时间，以纳秒（1 / 1,000,000,000 秒）为单位
	long long duration; /* Time spent by the query, in nanoseconds. */
	// 命令执行时的时间
	time_t time; /* Unix time at which the query was executed. */
} slowlogEntry;

记录服务器状态的 redis.h/redisServer 结构里保存了几个和慢查询有关的属性：
struct redisServer {
	// ... other fields
	// 保存慢查询日志的链表
	list *slowlog; /* SLOWLOG list of commands */
	// 慢查询日志的当前 id 值
	long long slowlog_entry_id; /* SLOWLOG current entry ID */
	// 慢查询时间限制
	long long slowlog_log_slower_than; /* SLOWLOG time limit (to get logged) */
	// 慢查询日志的最大条目数量
	unsigned long slowlog_max_len; /* SLOWLOG max number of items logged */
	// ... other fields
};